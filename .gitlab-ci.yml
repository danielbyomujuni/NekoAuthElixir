image: elixir:1.18.3-alpine

stages:
  - deps
  - build
  - test
  - deploy

services:
  - postgres:latest

variables:
  MIX_ENV: test
  FF_NETWORK_PER_BUILD: 1
  POSTGRES_PASSWORD: ci_pipeline_password
  BACKEND_POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PWD: ci_pipeline_password
  POSTGRES_DATABASE: neko_auth_test
  SALT_ROUNDS: 10
  POSTGRES_URL: "postgres://postgres:ci_pipeline_password@postgres/neko_auth_test"

deps:
  stage: deps
  script:
    - mix deps.get
  before_script:
  - apk add --no-cache build-base git openssl-dev
  - apk add --no-cache nodejs npm yarn
  - touch testing.env.exs
  - mix setup.pipeline
  artifacts:
    paths:
      - _build
      - deps

build:
  stage: build
  before_script:
  - apk add --no-cache build-base git openssl-dev
  - apk add --no-cache nodejs npm yarn
  - touch testing.env.exs
  - mix setup.pipeline
  script:
    - mix compile

test:
  stage: test
  before_script:
  - apk add --no-cache build-base git openssl-dev
  - apk add --no-cache nodejs npm yarn
  - touch testing.env.exs
  - mix setup.pipeline
  script:
    - mix setup
    - mix test
  artifacts:
    when: always
    reports:
      junit: report.xml
      
#coverage:
#  stage: test
#  script:
#    - mix ecto.create --quiet
#    - mix ecto.migrate --quiet
#    - mix coverage
#  coverage: '/(\d+\.\d+)%\s+\|\s+Total/'
#  artifacts:
#    paths:
#      - cover
#    when: always

build-container:
  stage: deploy
  rules:
    - if: '$CI_SERVER_URL =~ /^https?:\/\/gitlab\.nekosyndicate\.com(\/|$)/ && $CI_COMMIT_BRANCH == "main"' # && $CI_COMMIT_BRANCH == "main"
      when: always
    - when: never
  needs:
    - test
  image: 
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  tags:
    - build-container
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}:latest"

deploy-container:
  stage: deploy
  rules:

    - if: '$CI_SERVER_URL =~ /^https?:\/\/gitlab\.nekosyndicate\.com(\/|$)/ && $CI_COMMIT_BRANCH == "main"'
      when: always

    - when: never
  needs:
    - build-container
  image: registry.gitlab.nekosyndicate.com/danielb/dockerfiles/debian-docker:44464b5d
  before_script:
    #GET SSH KEYS
    - mkdir -p /root/.ssh/
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_KEY"
    - ssh-add "$SSH_KEY"
    - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
    - cd $CI_PROJECT_DIR
    - unset DOCKER_HOST
  script:
      - cp $PROD_ENV prod.env
      - docker context create neko_auth --docker "host=ssh://$SSH_USER@$SSH_HOST"
      - docker context use neko_auth
      - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
      - docker stack deploy --with-registry-auth --detach=true --compose-file ./docker-compose.yml neko_auth
